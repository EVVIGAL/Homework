using System;

namespace Homework_2
{
	internal class Program
	{
		static void Main(string[] args)
		{
			Console.CursorVisible = false;

			char player = 'O';
			char wall = '#';
			char goal = '@';
			int playerY = 3;
			int playerX = 1;

			char[,] map = { { wall, wall, wall, wall, wall, wall, wall, wall, wall, wall, wall, wall },
							  { wall, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', wall },
							  { wall, ' ', wall, wall, wall, wall, wall, ' ', wall, wall, wall, wall },
							  { wall, ' ', ' ', ' ', ' ', goal, ' ', ' ', ' ', ' ', ' ', wall },
							  { wall, wall, wall, wall, ' ', wall, ' ' , wall, wall, wall, wall, wall },
							  { wall,' ', ' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', wall },
							  { wall, wall, wall, wall, wall, wall, wall, wall, wall, wall, wall, wall }};

			DrawingMap(map, wall);

			Playing(playerX, playerY, player, map, wall);

			Console.SetCursorPosition(0, 10);
			Console.Write("Bye!");
			Console.ReadKey();
		}

		static void DrawingMap(char[,] array, char wall)
		{
			for (int i = 0; i < array.GetLength(0); i++)
			{
				for (int j = 0; j < array.GetLength(1); j++)
				{
					Console.Write(array[i, j]);
				}

				Console.WriteLine("");
			}
		}

		static void Playing(int positionX, int positionY, char player, char[,] array, char wall)
		{
			bool isPlaying = true;

			while (isPlaying)
			{
				int playerDirectionX;
				int playerDirectionY;

				Console.SetCursorPosition(positionY, positionX);
				Console.Write(player);

				Console.SetCursorPosition(0, 8);
				Console.Write("W - move up, S - move down, A - move left, D - move right\nEsc - Exit");

				SettingDirection(out playerDirectionX, out playerDirectionY, out isPlaying);

				if (array[positionX + playerDirectionX, positionY + playerDirectionY] != wall)
				{
					Moving(ref positionX, ref positionY, playerDirectionX, playerDirectionY, player);

					if (array[positionX, positionY] == '@')
					{
						Console.SetCursorPosition(0, 7);
						Console.Write("WIN!");
						isPlaying = false;
					}
				}
			}
		}

		static void SettingDirection(out int DirectionX, out int DirectionY, out bool isPlaying)
		{
			DirectionX = 0;
			DirectionY = 0;
			isPlaying = true;

			ConsoleKeyInfo key = Console.ReadKey(true);

			switch (key.Key)
			{
				case ConsoleKey.W:
					DirectionX = -1;
					DirectionY = 0;
					break;
				case ConsoleKey.S:
					DirectionX = 1;
					DirectionY = 0;
					break;
				case ConsoleKey.A:
					DirectionX = 0;
					DirectionY = -1;
					break;
				case ConsoleKey.D:
					DirectionX = 0;
					DirectionY = 1;
					break;
				case ConsoleKey.Escape:
					isPlaying = false;
					break;
			}
		}

		static void Moving(ref int positionX, ref int positionY, int directionX, int directionY, char player)
		{
			Console.SetCursorPosition(positionY, positionX);
			Console.Write(" ");

			positionX += directionX;
			positionY += directionY;

			Console.SetCursorPosition(positionY, positionX);
			Console.Write(player);
		}
	}
}
