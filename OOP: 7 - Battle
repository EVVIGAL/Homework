using System;
using System.Collections.Generic;

namespace Homework_2
{
	internal class Program
	{
		static void Main(string[] args)
		{
			bool isFighting = true;

            Console.WriteLine("Выберте первого бойца:\n1 - Рыцарь\n2 - Маг");
			Warrior firstWarrior = ChooseWarrior();

			Console.WriteLine("Первый боец выбран! Выберите второго:\n1 - Рыцарь\n2 - Маг");
			Warrior secondWarrior = ChooseWarrior();

			Console.WriteLine("Отлично, можем начинать бой!");
			Console.ReadKey();

			while (isFighting)
			{
				while (firstWarrior.GetHealth() > 0 && secondWarrior.GetHealth() > 0)
				{
					Battle(firstWarrior, secondWarrior);
				}

				if (firstWarrior.GetHealth() < 0)
					Console.WriteLine($"{secondWarrior.Name} победил!");
				else if (secondWarrior.GetHealth() < 0)
                    Console.WriteLine($"{firstWarrior.Name} победил!");

				Console.ReadKey();
				isFighting = false;
			}
		}

		static void Battle(Warrior firstWarrior, Warrior secondWarrior)
		{
			float damage;
			Console.Clear();
			Console.WriteLine($"Сражаются {firstWarrior.Name} и {secondWarrior.Name}");
			damage = firstWarrior.DealDamage();
			secondWarrior.TakeDamage(damage);
			Console.WriteLine($"{firstWarrior.Name} наносит {damage} урона. После защиты у {secondWarrior.Name} остаётся {secondWarrior.GetHealth()} здоровья.");
			damage = secondWarrior.DealDamage();
			firstWarrior.TakeDamage(damage);
			Console.WriteLine($"{secondWarrior.Name} наносит {damage} урона. После защиты у {firstWarrior.Name} остаётся {firstWarrior.GetHealth()} здоровья.");
			Console.ReadKey();
		}

		static Warrior ChooseWarrior()
        {
			Warrior warrior = null;
			string userInput = Console.ReadLine();

			switch (userInput)
			{
				case "1":
					warrior = new Knight();
					break;
				case "2":
					warrior = new Sorcerer();
					break;
				default:
					Console.WriteLine("Ошибка ввода.");
					break;
			}

			return warrior;
		}
	}

	abstract class Warrior
	{
		protected float MaxHealth = 1000f;
		protected float Health;
		protected float AttackPower;
		protected float MaxDefence = 80f;
		protected float Defence;
		protected float CommonAttackRatio;
		protected int FirstSkillRecharge;
		protected int SecondSkillRecharge;

		public Warrior()
		{

		}

		public string Name { get; private set; }

		public float GetHealth()
		{
			return Health;
		}

		public void SetName(string name)
		{
			Name = name;
		}

		public float DealDamage()
		{
			float damage = AttackPower * CommonAttackRatio;
			return damage;
		}

		public void TakeDamage(float damage)
		{
			int oneHundredPercent = 100;
			damage -= (Defence / oneHundredPercent) * damage;
			Health -= damage;
		}
	}

	class Knight : Warrior
	{
		public Knight()
		{
			Health = MaxHealth;
			AttackPower = 200f;
			Defence = 40f;
			CommonAttackRatio = 0.7f;
			FirstSkillRecharge = 3;
			SetName("Рыцарь");
		}
	}

	class Sorcerer : Warrior
	{
		public Sorcerer()
		{
			Health = MaxHealth;
			AttackPower = 400f;
			Defence = 20f;
			CommonAttackRatio = 0.6f;
			FirstSkillRecharge = 4;
			SetName("Маг");
		}
	}
}
