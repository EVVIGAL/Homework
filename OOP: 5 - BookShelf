using System;
using System.Collections.Generic;

namespace Homework_2
{
	internal class Program
	{
		static void Main(string[] args)
		{
			bool isWorking = true;
			Bookshelf bookshelf = new Bookshelf();

			while (isWorking)
			{
				Console.Clear();
				Console.WriteLine("Перед Вами книжная полка. Введите номер команды:");
				Console.WriteLine("1 - Добавить книгу\n2 - Удалить книгу\n3 - Показать все книги\n4 - Удалить все книги\n5 - Сортировать книги\n6 - Выйти");
				string userInput = Console.ReadLine();

				switch (userInput)
				{
					case "1":
						bookshelf.AddBook();
						break;
					case "2":
						bookshelf.DeleteBook();
						break;
					case "3":
						bookshelf.ShowBooks();
						break;
					case "4":
						bookshelf.DeleteAllBooks();
						break;
					case "5":
						bookshelf.SortBooks();
						break;
					case "6":
						isWorking = false;
						break;
					default:
						Console.WriteLine("Ошибка ввода.");
						Console.ReadKey();
						break;
				}
			}
		}
	}

	class Bookshelf
	{
		private List<Book> _books = new List<Book>();

		public Bookshelf()
		{
			_books.Add(new Book("The Lord Of The Ring", "J. R. R. Tolkien", "Fantasy", "EKSMO", "2003"));
			_books.Add(new Book("Witcher", "Andrzej Sapkowski", "Fantasy", "EKSMO", "2015"));
			_books.Add(new Book("Howl's Moving Castle", "Diana Wynne Jones", "Anime", "Greenwillow Books", "2003"));
		}

		private List<Book> FindBooksByTitle()
        {
			List<Book> findedBooks = new List<Book>();
                        Console.WriteLine("Введите название книги:");
			string userInput = Console.ReadLine();
			int bookIsPresent = 0;

			for (int i = 0; i < _books.Count; i++)
				if (userInput == _books[i].Title)
				{
					findedBooks.Add(_books[i]);
					bookIsPresent++;
				}

			if (bookIsPresent == 0)
				Console.WriteLine("Таких книг нет.");

			return findedBooks;
		}

		private List<Book> FindBooksByWriter()
		{
			List<Book> findedBooks = new List<Book>();
			Console.WriteLine("Введите автора книги:");
			string userInput = Console.ReadLine();
			int bookIsPresent = 0;

			for (int i = 0; i < _books.Count; i++)
				if (userInput == _books[i].Writer)
				{
					findedBooks.Add(_books[i]);
					bookIsPresent++;
				}

			if (bookIsPresent == 0)
				Console.WriteLine("Таких книг нет.");

			return findedBooks;
		}

		private List<Book> FindBooksByGenre()
		{
			List<Book> findedBooks = new List<Book>();
			Console.WriteLine("Введите жанр книги:");
			string userInput = Console.ReadLine();
			int bookIsPresent = 0;

			for (int i = 0; i < _books.Count; i++)
				if (userInput == _books[i].Genre)
                                {
					findedBooks.Add(_books[i]);
					bookIsPresent++;
				}

			if(bookIsPresent == 0)
                Console.WriteLine("Таких книг нет.");

			return findedBooks;
		}

		private List<Book> FindBooksByPublisher()
		{
			List<Book> findedBooks = new List<Book>();
			Console.WriteLine("Введите издателя книги:");
			string userInput = Console.ReadLine();
			int bookIsPresent = 0;

			for (int i = 0; i < _books.Count; i++)
				if (userInput == _books[i].Publisher)
				{
					findedBooks.Add(_books[i]);
					bookIsPresent++;
				}

			if (bookIsPresent == 0)
				Console.WriteLine("Таких книг нет.");

			return findedBooks;
		}

		private List<Book> FindBooksByYear()
		{
			List<Book> findedBooks = new List<Book>();
			Console.WriteLine("Введите дату выпуска книги:");
			string userInput = Console.ReadLine();
			int bookIsPresent = 0;

			for (int i = 0; i < _books.Count; i++)
				if (userInput == _books[i].YearOfRelease)
				{
					findedBooks.Add(_books[i]);
					bookIsPresent++;
				}

			if (bookIsPresent == 0)
				Console.WriteLine("Таких книг нет.");

			return findedBooks;
		}

		private List<Book> FindBooks()
		{
			List<Book> findedBooks = new List<Book>();
			Console.WriteLine("Введите параметр сортировки книг: \n1 - Название\n2 - Автор\n3 - Жанр\n4 - Издатель\n5 - Год выпуска");
			string userInput = Console.ReadLine();

			switch (userInput)
			{
				case "1":
					findedBooks = FindBooksByTitle();
					break;
				case "2":
					findedBooks = FindBooksByWriter();
					break;
				case "3":
					findedBooks = FindBooksByGenre();
					break;
				case "4":
					findedBooks = FindBooksByPublisher();
					break;
				case "5":
					findedBooks = FindBooksByYear();
					break;
				default:
					Console.WriteLine("Ошибка ввода.");
					Console.ReadKey();
					break;
			}

			return findedBooks;
		}

		public void AddBook()
		{
			Console.WriteLine("Название книги: ");
			string title = Console.ReadLine();
			Console.WriteLine("Автор: ");
			string writer = Console.ReadLine();
			Console.WriteLine("Жанр: ");
			string genre = Console.ReadLine();
			Console.WriteLine("Издатель: ");
			string publisher = Console.ReadLine();
			Console.WriteLine("Год выпуска: ");
			string year = Console.ReadLine();
			_books.Add(new Book(title, writer, genre, publisher, year));
			Console.WriteLine("Книга успешно добавлена.");
			Console.ReadKey();
		}

		public void DeleteBook()
		{
			Console.WriteLine("Введите номер книги, которую хотите удалить: ");
			string userInput = Console.ReadLine();
			int number;
			bool success = int.TryParse(userInput, out number);

			if (success == false)
			{
				Console.WriteLine("Ошибка ввода.");
			}

			if (number - 1 < _books.Count && number - 1 > 0)
			{
				_books.RemoveAt(number - 1);
				Console.WriteLine("Книга удалена.");
			}
			else
                     		Console.WriteLine("Ошибка ввода.");

			Console.ReadKey();
		}

		public void ShowBooks()
		{
			for (int i = 0; i < _books.Count; i++)
			{
				Console.WriteLine((i + 1) + ") " + "Название: " + _books[i].Title + "\nАвтор: " + _books[i].Writer + "\nЖанр: " + _books[i].Genre + "\nИздатель: " + _books[i].Publisher + "\nГод выпуска: " + _books[i].YearOfRelease + "\n");
			}

			Console.ReadKey();
		}

		public void SortBooks()
		{
			List<Book> findedBooks = new List<Book>();
			findedBooks = FindBooks();

			for (int i = 0; i < findedBooks.Count; i++)
				Console.WriteLine(_books.IndexOf(findedBooks[i]) + 1 + ") " + "Название: " + findedBooks[i].Title + "\nАвтор: " + findedBooks[i].Writer + "\nЖанр: " + findedBooks[i].Genre + "\nИздатель: " + findedBooks[i].Publisher + "\nГод выпуска: " + findedBooks[i].YearOfRelease + "\n");

			Console.ReadKey();
        }

		public void DeleteAllBooks()
		{
			_books.Clear();
			Console.WriteLine("Все книги были удалены с полки.");
			Console.ReadKey();
		}
	}

	class Book
	{
		public Book(string title, string writer, string genre, string publisher, string year)
		{
			Title = title;
			Writer = writer;
			Genre = genre;
			Publisher = publisher;
			YearOfRelease = year;
		}

		public string Title { get; private set; }

		public string Writer { get; private set; }

		public string Genre { get; private set; }

		public string Publisher { get; private set; }

		public string YearOfRelease { get; private set; }
	}
}
