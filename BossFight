using System;
class HelloWorld 
{
  static void Main() 
  {
			float heroHealth = 2800f;
			float heroMaxHealth = 2800f;
			float heroAttack = 220f;
			int heroAttackRange;
			float heroDefensePercent = 0.9f;
			string chosenSkill;
			float burnDamageMultiply = 0.05f;
			float fireMultiply = 1.8f;
			float ultMultiply = 4.7f;
			int heal = 120;
			int burn = 0;
			int burnCounter = 3;
			int fireCost = 3;
			int debuffCost = 2;
			int ultCost = 4;
			int heroEnergy = 0;
			int heroMaxEnergy = 5;
			bool enemyTurn;
			bool heroUltimativeSkillIsReady = false;

			float enemyHealth = 3200f;
			float enemyAttack = 240f;
			int enemyAttackRange;
			float enemyDefenseOriginal = 20;
			float enemyDefense = 20;
			float enemyDefensePercent;
			float enemyUltimativeSkillMultiply = 2.3f;
			Random random = new Random();
			int enemyHit;
			int defenseBuff = 5;

			while (enemyHealth > 0 && heroHealth > 0)
			{
			    enemyAttackRange = random.Next(-50, 51);
			    heroAttackRange = random.Next(-30, 31);
				enemyDefensePercent = 1 - enemyDefense/100;
				enemyTurn = true;
				Console.Clear();
				Console.WriteLine("Вы маг-герой. В поисках пропавших овец вы забрели в пещеру, где нашли небольшое озеро на островке которого мирно стояли овцы.\nПриблизившись к озеру вам дорогу преградило невиданное существо, наполовину скрытое под водой и лишь щупальца его тянулись к вам.\nСразите ужас из глубин используя свои способности:");
				Console.WriteLine("Hit - удар посохом. Каждый удар накапливает 1 единицу энергии.\nFire ball - герой выпускает огненный шар, наносящий большой урон и поджигает врага. Необходимо 3 единицы энергии.\nHeal - излечивает героя на 120 единиц здоровья, даёт 1 единицу энергии.\nDebuff - снимает с ужаса глубин защитный бафф. Необходимо 2 единицы энергии.\nUlt - Герой использует телекинез и бросает во врага тяжелые объекты. Необходимо 4 единицы энергии и тяжелые объекты.");
				Console.WriteLine("Здоровье героя: " + heroHealth + ". Энергия: " + heroEnergy);
				Console.WriteLine("Здоровье врага: " + enemyHealth);
				Console.Write("Выберите скилл: ");
				chosenSkill = Console.ReadLine();

				switch (chosenSkill)
				{
					case "Hit":
						heroEnergy++;
						
						if (heroEnergy > heroMaxEnergy)
						{
							heroEnergy = heroMaxEnergy;
						}
						
						heroAttackRange = random.Next(-30, 31);
						enemyHealth -= (heroAttack + heroAttackRange) * enemyDefensePercent;
						Console.WriteLine("Вы нанесли " + ((heroAttack + heroAttackRange) * enemyDefensePercent) + " урона.");
						Console.ReadKey();
						break;

					case "Fire ball":

						if (heroEnergy >= fireCost)
						{
							heroEnergy -= fireCost;
							enemyHealth -= (heroAttack + heroAttackRange) * fireMultiply * enemyDefensePercent;
							burn = burnCounter;
							Console.WriteLine("Вы нанесли " + ((heroAttack + heroAttackRange) * fireMultiply) + " урона и подожгли противника.");
						}
						else
						{
							enemyTurn = false;
							Console.WriteLine("Недостаточно энергии.");
							Console.ReadLine();
						}

						break;
					case "Heal":
						heroEnergy++;
						
						if (heroEnergy > heroMaxEnergy)
						{
							heroEnergy = heroMaxEnergy;
						}
						
						heroHealth += heal;
						
						if (heroHealth > heroMaxHealth)
                        {
							heroHealth = heroMaxHealth;
                        }
                        
						Console.WriteLine("Магия света поддерживает жизнь в вашем теле.");
						Console.ReadKey();
						break;
					case "Debuff":
						if (heroEnergy >= debuffCost)
						{
							enemyDefense = enemyDefenseOriginal;
							Console.WriteLine("Вы смываете защитную слизь с Ужаса глубин, ослабив его защиту.");
							Console.ReadKey();
						}
                        else
                        {
							enemyTurn = false;
							Console.WriteLine("Недостаточно энергии.");
							Console.ReadKey();
						}
						break;
					case "Ult":
						if (heroEnergy >= ultCost && heroUltimativeSkillIsReady == true)
						{
						    heroEnergy -= ultCost;
							enemyHealth -= (heroAttack + heroAttackRange) * ultMultiply * enemyDefensePercent;
							heroUltimativeSkillIsReady = false;
							Console.WriteLine("Обрушенные сталактиты взмывают в воздух и устремляются в сторону Ужаса глубин нанося колосальный урон в " + ((heroAttack + heroAttackRange) * ultMultiply * enemyDefensePercent)+ " единиц");
							Console.ReadKey();
						}
						else if (heroEnergy >= ultCost && heroUltimativeSkillIsReady == false)
						{
							enemyTurn = false;
							Console.WriteLine("Вокруг нет чего-либо, что можно запустить во врага.");
							Console.ReadKey();
						}
                        else
                        {
							enemyTurn = false;
							Console.WriteLine("Недостаточно энергии.");
							Console.ReadKey();
						}
						break;
				}
				
				if (enemyHealth <= 0)
				{
				    break;
				}

				if (burn > 0 && enemyTurn == true)
				{
					enemyHealth -= enemyHealth * burnDamageMultiply;
					burn--;
					Console.WriteLine("Враг получил " + (enemyHealth * burnDamageMultiply) + " урона от ожога");
				}

				if (enemyTurn == true)
				{
					enemyHit = random.Next(0, 3);

					switch (enemyHit)
					{
						case 0:
							heroHealth -= (enemyAttack + enemyAttackRange) * heroDefensePercent;
							Console.WriteLine("Ужас глубин наносит удары щупальцами.\nВы получили " + ((enemyAttack + enemyAttackRange) * heroDefensePercent) + " урона");
							Console.ReadKey();
							break;
						case 1:
							Console.WriteLine("Ужас глубин покрывается защитной слизью, его защита увеличивается");
							enemyDefense += defenseBuff;
							Console.ReadKey();
							break;
						case 2:
							if (heroUltimativeSkillIsReady == false)
							{
								heroUltimativeSkillIsReady = true;
								heroHealth -= (enemyAttack + enemyAttackRange) * heroDefensePercent * enemyUltimativeSkillMultiply;
								Console.WriteLine("Ужас глубин хватает героя и бьёт о стены. От сотрясений большие куски сталактитов валятся с потолка.\nВы получили " + ((enemyAttack + enemyAttackRange) * heroDefensePercent * enemyUltimativeSkillMultiply) + " урона.");
								Console.ReadKey();
							}
                            else
                            {
                                heroHealth -= (enemyAttack + enemyAttackRange) * heroDefensePercent;
								Console.WriteLine("Ужас глубин пытется схватить героя, но лишь вскользь задевает его нанеся " + ((enemyAttack + enemyAttackRange) * heroDefensePercent) + " урона.");
								Console.ReadKey();
							}
							break;
					}
				}
			}

			if (enemyHealth <= 0)
			{
				Console.Clear();
				Console.WriteLine("Ужас глубин повержен, овцы спасены. Победа героя!");
			}
			else if (heroHealth <= 0)
			{
				Console.Clear();
				Console.WriteLine("Поверженное тело героя плавает на поверхности озера и лишь периодическое блеяние овец нарушает тишину...");
			}
  }
}
