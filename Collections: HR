using System;
using System.Collections.Generic;

namespace Homework_2
{
	internal class Program
	{
		static void Main(string[] args)
		{
			bool isWorking = true;
			string userInput;
			Dictionary<string, string> workers = new Dictionary<string, string>();

			while (isWorking)
			{
				Console.Clear();
				Console.WriteLine("Выберите пункт меню:\n1 - Добавить досье\n2 - Вывести все досье\n3 - Удалить досье\n4 - Выход");

				userInput = Console.ReadLine();

				switch (userInput)
				{
					case "1":
						AddWorker(workers);
						break;
					case "2":
						ShowList(workers);
						break;
					case "3":
						DeleteWorker(workers);
						break;
					case "4":
						isWorking = false;
						break;
					default:
						Console.WriteLine("Ошибка ввода, попробуйте ещё раз.");
						break;
				}

				Console.ReadKey();
			}
		}

		static void AddWorker(Dictionary<string, string> workers)
		{
			string fullName;
			string position;

			Console.WriteLine("Введите ФИО:");
			fullName = Console.ReadLine();
			if (workers.ContainsKey(fullName))
			{
				Console.WriteLine("Сотрудник с таким именем уже внесён. При внесении дублирующихся имён, добавьте порядковый номер после ФИО. Спасибо");
			}
			else
			{
				Console.WriteLine("Введите должность:");
				position = Console.ReadLine();

				workers.Add(fullName, position);
			}
		}

		static void ShowList(Dictionary<string, string> dictionary)
		{
			foreach (var item in dictionary)
				Console.WriteLine(item.Key + " - " + item.Value);
		}

		static void DeleteWorker(Dictionary<string, string> workers)
		{
			string userInput;
			Console.WriteLine("Введите ФИО, досье которого хотите удалить:");
			userInput = Console.ReadLine();

			if (workers.ContainsKey(userInput))
			{
				workers.Remove(userInput);
			}
			else
			{
				Console.WriteLine("Такого досье нет.");
			}
		}
	}
}
